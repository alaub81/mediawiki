services:
  mediawiki:
    image: ghcr.io/alaub81/mediawiki-custom:${MW_VERSION:-latest}
    depends_on:
      database:
        condition: service_healthy
      memcached:
        condition: service_started
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped
    environment:
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD:-R00tPassword}
      MW_AUTO_UPDATE: ${MW_AUTO_UPDATE:-false}
      MW_JOBS_CRON: ${MW_JOBS_CRON:-false}
      MW_PHP_UPLOAD_MAX_FILESIZE: ${MW_PHP_UPLOAD_MAX_FILESIZE:-100M}
      MW_PHP_POST_MAX_SIZE: ${MW_PHP_POST_MAX_SIZE:-100M}
      MW_SITEMAP_GENERATION: ${MW_SITEMAP_GENERATION:-false}
      MW_SITEMAP_CRON: "${MW_SITEMAP_CRON:-20 */12 * * *}"
      MW_SITEMAP_IDENTIFIER: "${MW_SITEMAP_IDENTIFIER:-wiki}"
      MW_SITEMAP_SERVER: "${MW_SITEMAP_SERVER:-}"
      MW_SITEMAP_URLPATH: "${MW_SITEMAP_URLPATH:-}"
      MW_SITEMAP_SKIP_REDIRECTS: "${MW_SITEMAP_SKIP_REDIRECTS:-}"
      MW_SITEMAP_RUN_ON_START: "${MW_SITEMAP_RUN_ON_START:-false}"
      MW_ROTTENLINKS_GENERATION: ${MW_ROTTENLINKS_GENERATION:-false}
      MW_ROTTENLINKS_CRON: "${MW_ROTTENLINKS_CRON:-30 */12 * * *}"
      MW_ROTTENLINKS_RUN_ON_START: "${MW_ROTTENLINKS_RUN_ON_START:-false}"
      MW_CS_INDEX_UPDATE: ${MW_CS_INDEX_UPDATE:-false}
      MW_CS_INDEX_CRON: "${MW_CS_INDEX_CRON:-15 * * * *}"
      MW_CS_INDEX_RUN_ON_START: "${MW_CS_INDEX_RUN_ON_START:-false}"
      TZ: ${TZ:-UTC}
    # env_file:
    #   - .env.mwsetup
    ports:
      - ${MW_HTTP_PORT:-8080}:80
    labels:
      - "com.centurylinklabs.watchtower.enable: true"
    volumes:
      - data_mw_images:/var/www/html/images
      # After initial setup, download LocalSettings.php to data/conf directory
      # and uncomment the following line and use compose to restart
      # the mediawiki service
      # - ./data/mediawiki/conf/LocalSettings.php:/var/www/html/LocalSettings.php:ro
      # or custom config file don't forget to set MW_CONFIG_FILE env var in .env
      # - ./data/mediawiki/conf/mw_local_settings:/var/www/html/conf/:rw
      # --- Custom files and volumes: ---
      # - ./data/mediawiki/conf/robots.txt:/var/www/html/robots.txt:ro
      # - ./data/mediawiki/conf/.htaccess:/var/www/html/.htaccess:ro
      # - ./data/mediawiki/favicon/:/var/www/html/favicon:ro
      # - ./data/mediawiki/conf/ads.txt:/var/www/html/ads.txt:ro
      # - ./data/mediawiki/conf/loaderio-6e9f1d0addd92099f02be40c8be3a4db.txt:/var/www/html/loaderio-6e9f1d0addd92099f02be40c8be3>
    healthcheck:
      test:
        - CMD-SHELL
        - |
          set -e
          ident="$${MW_SITEMAP_IDENTIFIER:-wiki}"
          curl -fsS "http://localhost/api.php?action=query&meta=siteinfo&format=json" | grep -q '"query"'
          headers="$$(curl -fsSI http://localhost/sitemap.xml)"
          echo "$$headers" | grep -qiE '^HTTP/.* 301 '
          loc="$$(echo "$$headers" | awk 'BEGIN{IGNORECASE=1} /^Location:/{print $$2}' | tr -d "\r")"
          echo "$$loc" | grep -q "/sitemap/sitemap-index-$$ident\.xml$"
          code="$$(curl -fsSI "$$loc" | awk 'NR==1{print $$2}')"
          [ "$$code" = "200" ]
      interval: 30s
      timeout: 5s
      retries: 10
      start_period: 90s
    networks:
      app-nw:
      backend-nw:
        aliases:
          - wiki

  database:
    image: mariadb:${MARIADB_VERSION:-11.8}
    volumes:
      - data_db:/var/lib/mysql
    restart: unless-stopped
    environment:
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD:-R00tPassword}
      TZ: ${TZ:-UTC}
    labels:
      - "com.centurylinklabs.watchtower.enable: true"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "mariadb -u root -p$${MARIADB_ROOT_PASSWORD} -e 'SELECT 1'",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      backend-nw:
        aliases:
          - db

  memcached:
    image: memcached:${MEMCACHED_VERSION:-alpine}
    restart: unless-stopped
    command: ["-m", "${MEMCACHED_CACHE_MB:-16}"]
    environment:
      - TZ=${TZ:-UTC}
    labels:
      - "com.centurylinklabs.watchtower.enable: true"
    healthcheck:
      test:
        - CMD-SHELL
        - |
          printf 'version\r\n' \
            | nc -w 2 127.0.0.1 11211 2>/dev/null \
            | tr -d '\r' \
            | grep -qiE '^VERSION[[:space:]]+[0-9]'
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 5s
    networks:
      backend-nw:
        aliases:
          - wikimemcached

  memcachephp:
    image: ghcr.io/alaub81/memcachephp:${MEMCACHEPHP_VERSION:-latest}
    restart: unless-stopped
    depends_on:
      - memcached
    environment:
      TZ: ${TZ:-UTC}
      MEMCACHEPHP_SERVERS: ${MEMCACHEPHP_SERVERS:-memcached:11211}
      MEMCACHEPHP_ADMIN_USER: ${MEMCACHEPHP_ADMIN_USER:-admin}
      MEMCACHEPHP_ADMIN_PASS: ${MEMCACHEPHP_ADMIN_PASS:-supersecret}
      MEMCACHEPHP_DATE_FORMAT: ${MEMCACHEPHP_DATE_FORMAT:-Y-m-d H:i:s}
      MEMCACHEPHP_GRAPH_SIZE: ${MEMCACHEPHP_GRAPH_SIZE:-200}
      MEMCACHEPHP_MAX_ITEM_DUMP: ${MEMCACHEPHP_MAX_ITEM_DUMP:-50}
    labels:
      - "com.centurylinklabs.watchtower.enable: true"
    ports:
      - ${MEMCACHEPHP_HTTP_PORT:-8097}:80
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -fsS -u \"$${MEMCACHEPHP_ADMIN_USER}:$${MEMCACHEPHP_ADMIN_PASS}\" http://localhost/ | \
          grep -Eiq 'memcache|server stats|slabs'"
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      app-nw:
      backend-nw:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ES_VERSION:-7.10.2}
    restart: unless-stopped
    environment:
      "discovery.type": "single-node"
      ES_JAVA_OPTS: "-Xms${ES_HEAP_MIN:-512m} -Xmx${ES_HEAP_MAX:-512m}"
    volumes:
      - data_esdata:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        - CMD-SHELL
        - |
          set -e
          # kurzer Timeout < compose timeout
          curl -fsS --max-time 4 'http://localhost:9200/_cat/health?h=status' \
            | grep -Eq 'yellow|green'
      interval: 15s
      timeout: 10s
      retries: 20
      start_period: 60s
    networks:
      backend-nw:

volumes:
  data_db:
  data_mw_images:
  data_esdata:

networks:
  app-nw:
    internal: false
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: app-${PROJECT_NAME:-mw}
  backend-nw:
    internal: true
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: be-${PROJECT_NAME:-mw}
