FROM mediawiki:1.44
ENV DEBIAN_FRONTEND=noninteractive

ENV MW_INSTALL_EXTENSIONS="Lockdown Description2 RelatedArticles MobileFrontend WikiCategoryTagCloud CirrusSearch Elastica CookieConsent"
ENV MW_INSTALL_SKINS=""
ENV MW_EXTRA_EXTENSIONS="${MW_INSTALL_EXTENSIONS} RottenLinks"
ENV MW_EXTRA_SKINS="${MW_INSTALL_SKINS}"

COPY resources/mediawiki/mediawiki-rewrites.conf /etc/apache2/conf-available/mediawiki-rewrites.conf
COPY resources/mediawiki/memcachephp-proxy.conf /etc/apache2/conf-available/memcachephp-proxy.conf
COPY --chown=www-data:www-data resources/favicon /var/www/html/favicon/

RUN apt-get update \
  && apt-get install -y --no-install-recommends \
  unzip \
  && apt-get clean \
  && rm -rf /var/lib/apt/lists/* \
  && a2enmod headers proxy proxy_http \
  && a2enconf mediawiki-rewrites memcachephp-proxy

RUN set -eux; \
  BR="${MW_BRANCH:-REL${MEDIAWIKI_MAJOR_VERSION%%.*}_${MEDIAWIKI_MAJOR_VERSION#*.}}"; \
  echo "Using MW_BRANCH=$BR"; \
  FALLBACK_BRANCH="main"; \
  # clone_or_replace() { \
  #   url="$1"; target="$2"; branch="$3"; \
  #   rm -rf "$target"; \
  #   if git ls-remote --heads "$url" "$branch" >/dev/null 2>&1; then \
  #     git clone --depth=1 --single-branch -b "$branch" "$url" "$target"; \
  #   elif git ls-remote --heads "$url" master >/dev/null 2>&1; then \
  #     git clone --depth=1 --single-branch -b master "$url" "$target"; \
  #   elif git ls-remote --heads "$url" main >/dev/null 2>&1; then \
  #     git clone --depth=1 --single-branch -b main "$url" "$target"; \
  #   else \
  #     echo "No suitable branch in $url"; exit 128; \
  #   fi; \
  # }; \
  clone_with_fallback() { \
    url="$1"; dest="$2"; pref="${3:-$BR}"; fb="${4:-$FALLBACK_BRANCH}"; \
    branch="$pref"; \
    if git ls-remote --exit-code --heads "$url" "$branch" >/dev/null 2>&1; then \
      echo "✅ $url: using branch $branch"; \
    elif git ls-remote --exit-code --heads "$url" "$fb" >/dev/null 2>&1; then \
      echo "⚠️  $url: branch $branch missing, falling back to $fb"; \
      branch="$fb"; \
    else \
      echo "⚠️  $url: neither $branch nor $fb found, cloning default HEAD"; \
      branch=""; \
    fi; \
    rm -rf "$dest"; \
    if [ -n "$branch" ]; then \
      git clone --depth=1 --single-branch -b "$branch" "$url" "$dest"; \
    else \
      git clone --depth=1 "$url" "$dest"; \
    fi; \
  }; \
  # Extensions
  for ext in $MW_INSTALL_EXTENSIONS; do \
    url="https://gerrit.wikimedia.org/r/mediawiki/extensions/$ext"; \
    clone_with_fallback "$url" "/var/www/html/extensions/$ext"; \
  done; \
  # Skins
  for skin in $MW_INSTALL_SKINS; do \
    url="https://gerrit.wikimedia.org/r/mediawiki/skins/$skin"; \
    clone_with_fallback "$url" "/var/www/html/skins/$skin"; \
  done; \
  # Sonderfälle
  rm -rf /var/www/html/extensions/RottenLinks; \
  clone_with_fallback "https://github.com/miraheze/RottenLinks.git" "/var/www/html/extensions/RottenLinks"; \
  find /var/www/html/extensions -name .git -type d -prune -exec rm -rf {} +; \
  find /var/www/html/skins -name .git -type d -prune -exec rm -rf {} +; \
  chown -R www-data:www-data /var/www/html/extensions; \
  chown -R www-data:www-data /var/www/html/skins

# Supercronic (arch-agnostisch)
ARG TARGETARCH
RUN curl -fsSLo /usr/local/bin/supercronic \
  "https://github.com/aptible/supercronic/releases/download/v0.2.36/supercronic-linux-${TARGETARCH}" \
  && chmod +x /usr/local/bin/supercronic

COPY --chmod=0755 resources/mediawiki/mediawiki-entrypoint.sh /usr/local/bin/mediawiki-entrypoint.sh
COPY --chmod=0755 resources/mediawiki/generate-sitemap.sh /usr/local/bin/generate-sitemap.sh
COPY --chmod=0755 resources/mediawiki/generate-rottenlinks.sh /usr/local/bin/generate-rottenlinks.sh
COPY --chmod=0755 resources/mediawiki/mw-default-setup.sh /usr/local/bin/mw-default-setup.sh
COPY --chmod=0755 resources/mediawiki/generate-elasticindex.sh /usr/local/bin/generate-elasticindex.sh
COPY --chmod=0755 resources/mediawiki/update-cirrussearch-index.sh /usr/local/bin/update-cirrussearch-index.sh

# Get Composer Binary from official image
COPY --from=composer:2 /usr/bin/composer /usr/bin/composer

# Install dependencies for CirrusSearch and Elastica
RUN set -eux; \
    if [ -d "/var/www/html/extensions/CirrusSearch" ] && [ -f "/var/www/html/extensions/CirrusSearch/composer.json" ]; then \
      cd /var/www/html/extensions/CirrusSearch; \
      composer install --no-dev; \
    fi; \
    if [ -d "/var/www/html/extensions/Elastica" ] && [ -f "/var/www/html/extensions/Elastica/composer.json" ]; then \
      cd /var/www/html/extensions/Elastica; \
      composer install --no-dev; \
    fi

ENTRYPOINT ["/usr/local/bin/mediawiki-entrypoint.sh"]
CMD ["apache2-foreground"]
